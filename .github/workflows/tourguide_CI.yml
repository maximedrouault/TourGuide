
name: CI pipeline for Tourguide application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  JAVA_VERSION: "17"
  JAVA_DISTRIBUTION: "temurin"
  EXTERNAL_DEPENDENCIES: |
    mvn install:install-file -Dfile=./libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    mvn install:install-file -Dfile=./libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    mvn install:install-file -Dfile=./libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: Install external dependencies
        run: ${{ env.EXTERNAL_DEPENDENCIES }}

      - name: Build with Maven
        run: mvn -B clean compile


  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: Install external dependencies
        run: ${{ env.EXTERNAL_DEPENDENCIES }}

      - name: Build with Maven and execute tests
        run: mvn -B clean test


  package:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: Install external dependencies
        run: ${{ env.EXTERNAL_DEPENDENCIES }}

      - name: Build with Maven, execute tests and package
        run: mvn -B clean package


      - name: Upload the JAR built as artifact
        uses: actions/upload-artifact@v4
        with:
          path: target/*.jar


      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker container and push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tourguide